(function(t,u){typeof exports=="object"&&typeof module<"u"?module.exports=u(require("vue")):typeof define=="function"&&define.amd?define(["vue"],u):(t=typeof globalThis<"u"?globalThis:t||self,t.VueNumberIncrement=u(t.Vue))})(this,function(t){"use strict";return t.defineComponent({__name:"NumberIncrement",props:{to:null,speed:null,callback:null},emits:["callback"],setup(h,{emit:b}){const c=h,a=(e,n)=>{if(typeof e=="number")return e;if(isNaN(Number(e)))throw new Error(`the value of props [${n}] must be a number, or typeof Number(to) === 'number'`);return Number(e)},r=t.ref(0);let m=null;const N=e=>{const n=a(c.speed,"speed"),o=c.speed?12-Math.min(10,n):5;return Math.floor((e-r.value)/(o*10))},s=(e,n,o)=>{let i=Number((r.value+n+Number(Math.random().toFixed(o))).toFixed(o));if(n!==0){if(r.value=n>0?Math.min(i,e):Math.max(i,e),n>0&&i>=e||n<0&&i<=e){r.value=e,b("callback",r.value),cancelAnimationFrame(m);return}m=requestAnimationFrame(()=>s(e,n,o))}},l=()=>{var f,d;cancelAnimationFrame(m);const e=a(c.to,"to"),n=N(e),o=((f=e.toString().split(".")[1])==null?void 0:f.length)||0,i=((d=r.value.toString().split(".")[1])==null?void 0:d.length)||0,p=Math.min(2,Math.max(o,i)),_=Number(e.toFixed(p));m=requestAnimationFrame(()=>s(_,n,p))};return t.watch(c,()=>{l()}),t.onMounted(()=>{l()}),(e,n)=>t.toDisplayString(r.value)}})});
